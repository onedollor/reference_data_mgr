=== 产品经理需求理解分析 ===

核心功能分析（严格按需求）：

1. CSV数据导入系统
   - 文件名格式: 目录/文件名.yyyyMMddHHmmss.csv
   - 所有列均为string类型

2. SQL Server数据存储
   - 单一节点，无负载均衡
   - 最核心和简单的功能支持

3. 版本化数据表管理
   - 每个文件名对应一个table
   - 例如：abc.20250101000000.csv → 表abc with 20250101000000
   - 序列号列：每次load文件+1

4. 两阶段数据加载机制
   - Stage表（影子表）：数据先导入这里
   - Validation：运行验证逻辑
   - 正式表：通过验证的数据导入

5. 灵活验证机制
   - 支持Stored Procedure
   - 支持Python Class

6. 系统配置管理
   - 配置表记录：允许的csv文件名、validation、对应表和stage表
   - 起始日期、结束日期、添加用户

7. 用户权限管理
   - 用户表 + 用户组表
   - 权限控制：同用户组用户可更改配置

8. 系统日志记录
   - 记录validation结果的系统表
   - 完整的日志系统

9. Web管理界面
   - 添加新配置
   - 更改当前配置

10. Web报表和数据可视化
    - 浏览日志
    - 数据load的数据可视化

严格按需求的功能范围：
+ 仅支持CSV格式输入
+ 所有数据列均为string类型  
+ 单一SQL Server节点
+ 基于文件名的版本控制
+ Stage表预处理机制
+ 基础权限管理
+ 核心Web功能

明确不包含的功能：
- 复杂的负载均衡
- 多数据库支持
- 复杂数据类型处理
- 高级数据转换
- 复杂工作流

目标用户：
• 数据管理员 - 配置文件导入规则
• 业务用户 - 查看数据和报表  
• 系统管理员 - 用户权限管理

核心数据流：
CSV文件 -> Stage表 -> Validation -> 正式表 -> 报表展示

技术约束：
• 后端：Microsoft SQL Server
• 数据格式：CSV（所有列string类型）  
• 文件命名：严格的时间戳格式
• 验证：SP或Python类

关键数据库表结构需求：
1. 配置表 - 记录系统配置
2. 用户表 - 用户信息
3. 用户组表 - 权限管理
4. 日志表 - 系统操作记录
5. 验证结果表 - validation结果
6. 业务数据表 - 实际数据存储
7. Stage表 - 每个业务表的影子表

产品经理分析结论：
这是一个专注于CSV数据管理的企业级系统，核心特点是简单、可控、可追溯。
没有过度设计，严格按照实际业务需求实现最核心的功能。